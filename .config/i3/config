# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Fira Code 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec hyper
bindsym $mod+$alt+Return exec google-chrome-stable 

# kill focused window
bindsym $mod+q kill


# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+$alt+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# Workspace variables
set $workspace1 "1: Browser"
set $workspace2 "2: Terminal"
set $workspace3 "3: Development"
set $workspace4 "4: Testing"
set $workspace5 "5: Documentation"
set $workspace6 "6: General"
set $workspace7 "7: General"
set $workspace8 "8: General"
set $workspace9 "9: Entertainment"
set $workspace10 "10: Music"

# Number pad keys
# - Found using command: xev -event keyboard, and changing the window to floating mode 
# - Mod2 is the number lock key, which is needed for the number pad keys to correspond to numbers
# 	and not the alternative text manipulation keys
set $numberPadKey1 Mod2+KP_1
set $numberPadKey2 Mod2+KP_2
set $numberPadKey3 Mod2+KP_3
set $numberPadKey4 Mod2+KP_4
set $numberPadKey5 Mod2+KP_5
set $numberPadKey6 Mod2+KP_6
set $numberPadKey7 Mod2+KP_7
set $numberPadKey8 Mod2+KP_8
set $numberPadKey9 Mod2+KP_9
set $numberPadKey0 Mod2+KP_0

# switch to workspace with number row
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# switch to workplace with number pad
bindsym $mod+$numberPadKey1 workspace $workspace1
bindsym $mod+$numberPadKey2 workspace $workspace2
bindsym $mod+$numberPadKey3 workspace $workspace3
bindsym $mod+$numberPadKey4 workspace $workspace4
bindsym $mod+$numberPadKey5 workspace $workspace5
bindsym $mod+$numberPadKey6 workspace $workspace6
bindsym $mod+$numberPadKey7 workspace $workspace7
bindsym $mod+$numberPadKey8 workspace $workspace8
bindsym $mod+$numberPadKey9 workspace $workspace9
bindsym $mod+$numberPadKey0 workspace $workspace10

# Moving windows to specific containers
# - Window classes found by using commands: xwininfo and xprop
for_window [class="Spotify"] move to workspace $workspace10, fullscreen enable
for_window [class="jetbrains-idea" class="jetbrains-webstorm"] move to workspace $workspace3

# Functions for moving containers

# Move focused container to workspace with number row
# - Following command: workspace $workspaceX is to make it so the workspace is followed
bindsym $mod+$alt+1 move container to workspace $workspace1; workspace $workspace1
bindsym $mod+$alt+2 move container to workspace $workspace2; workspace $workspace2
bindsym $mod+$alt+3 move container to workspace $workspace3; workspace $workspace3
bindsym $mod+$alt+4 move container to workspace $workspace4; workspace $workspace4
bindsym $mod+$alt+5 move container to workspace $workspace5; workspace $workspace5
bindsym $mod+$alt+6 move container to workspace $workspace6; workspace $workspace6
bindsym $mod+$alt+7 move container to workspace $workspace7; workspace $workspace7
bindsym $mod+$alt+8 move container to workspace $workspace8; workspace $workspace8
bindsym $mod+$alt+9 move container to workspace $workspace9; workspace $workspace9
bindsym $mod+$alt+0 move container to workspace $workspace10; workspace $workspace10

# move focused container to workspace with number pad
bindsym $mod+$alt+$numberPadKey1 move container to workspace $workspace1; workspace $workspace1
bindsym $mod+$alt+$numberPadKey2 move container to workspace $workspace2; workspace $workspace2
bindsym $mod+$alt+$numberPadKey3 move container to workspace $workspace3; workspace $workspace3
bindsym $mod+$alt+$numberPadKey4 move container to workspace $workspace4; workspace $workspace4
bindsym $mod+$alt+$numberPadKey5 move container to workspace $workspace5; workspace $workspace5
bindsym $mod+$alt+$numberPadKey6 move container to workspace $workspace6; workspace $workspace6
bindsym $mod+$alt+$numberPadKey7 move container to workspace $workspace7; workspace $workspace7
bindsym $mod+$alt+$numberPadKey8 move container to workspace $workspace8; workspace $workspace8
bindsym $mod+$alt+$numberPadKey9 move container to workspace $workspace9; workspace $workspace9
bindsym $mod+$alt+$numberPadKey0 move container to workspace $workspace10; workspace $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Set colors
set $blueGrey050 #ECEFF1
set $blueGrey100 #CFD8DC
set $blueGrey200 #B0BEC5
set $blueGrey300 #90A4AE
set $blueGrey400 #78909C
set $blueGrey500 #607D8B
set $blueGrey600 #546E7A
set $blueGrey700 #455A64
set $blueGrey800 #37474F
set $blueGrey900 #263238

set $lightGreen300 #AED581
set $helper #DD2C00
set $red400 #E06C75
set $red500 #AB3737

# Set window colors
# - Window state definitions:
#	- focused: the currently focused client
#	- unfocused: clients which aren't focused on in their container
#	- focused_inactive: the focused client in an unfocused container
#	- urgent: a client with an urgency hint
#	- placeholder: background and text color are used to draw placeholder window contents
#		(when restoring layouts). Border and indicator are ignored
#	- background color which appears as the background before the window is rendered
# Arguments are in order:
# window state,			border color,	background color,	text color,		indicator color,	child border color
# client.focused			$red400			$red400				$blueGrey050	$lightGreen300		$red400
client.focused			$blueGrey700	$blueGrey700		$blueGrey050	$lightGreen300		$blueGrey700
client.unfocused		$blueGrey800	$blueGrey800		$blueGrey300	$blueGrey900		$blueGrey800
# client.unfocused_inactive $blueGrey800	$blueGrey800		$blueGrey050	$blueGrey900		$blueGrey800
client.focused_inactive	$blueGrey800	$blueGrey800		$blueGrey050	$blueGrey800		$blueGrey800
client.urgent			$lightGreen300	$lightGreen300		$blueGrey050	$red400				$lightGreen300
client.placeholder		$blueGrey900	$blueGrey800		$lightGreen300	$blueGrey900		$blueGrey800

client.background	$blueGrey900

bar {
    status_command i3blocks
	position top
	colors {
		background $blueGrey900
		separator $lightGreen300
		# - Workplace state definitions:
		# 	- focused_workspace: workspace button which has focus
		# 	- active_workspace: workspace button which is active on one monitor but another
		# 		another monitor has another workspace open which has focus
		# 	- inactive_workspace: workspace button which doesn't have focus and isn't visible
		# 		on any outputs
		# 	- urgent_workspace: workspace button which has an urgency hint
		# - Arguments are in order: 
		# workspace state, 	border color, 	background color, 	text color
		focused_workspace	$blueGrey900	$blueGrey800		$blueGrey050
		inactive_workspace	$blueGrey900	$blueGrey900		$blueGrey300
		urgent_workspace	$lightGreen300	$lightGreen300		$blueGrey050
	}
}

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
# start dmenu (a program launcher) using the j4-dmenu-desktop wrapper program
# dmenu is launched at the bottom so that the container bars aren't blocked
bindsym $mod+space exec j4-dmenu-desktop --dmenu="dmenu -i -fn 'Fira Code-13' -nb '$blueGrey900' -nf '$blueGrey300' -sb '$blueGrey800' -sf '$red400'"
# bindsym $mod+space exec --no-startup-id dmenu_run -i -fn 'Fira Code-13' -nb '$blueGrey900' -nf '$blueGrey300' -sb '$blueGrey800' -sf '$red400'

# Change background color
exec_always --no-startup-id xsetroot -solid "$blueGrey900"

# Pulse audio controls
bindsym XF86AudioRaiseVolume exec --no-start-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-start-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-start-id pactl set-sink-mute 0 toggle

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrevious exec playerctl previous

# Load on boot
# - The command i3-msg is used to send i3 commands
# - The option --no-startup-id is used to prevent i3 from showing user that a program is launching
# exec --no-startup-id i3-msg 'workspace $workspace1; exec --no-startup-id chromium-browser;'
# exec --no-startup-id i3-msg 'workspace $workspace2; exec --no-startup-id hyper;'
# - Commented out as not currently working

# Place user on workspace 1
exec --no-startup-id i3-msg 'workspace $workspace1;'

# Set default layout to tabbed
workspace_layout tabbed

# I3 gaps
for_window [class="^.*"] border pixel 1 # Disables window titles
gaps inner 10
gaps outer 0
# smart_gaps on
